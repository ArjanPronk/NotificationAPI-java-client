openapi: 3.0.0
info:
  title: NotificationAPI api
  description: >-
    ## 👋 Introduction


    Welcome to the [NotificationAPI](https://notificationapi.com/) API Docs 🚀


    ## 🛟 Help and support


    We are gradually documenting our APIs 🐢 If you don't see something, just
    send us a message in the chat, and we'll get it updated in minutes 🐇


    ## Glossary


    - `envId` refers to the account or environment you are modifying

    - `user` refers to an end-user, the recipient of notifications

    - `member` refers to your team members with access to the dashboard

    - `notification` refers to a notification type that you configure in our
    dashboard, for example: `new_comment_notification`
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apikeyAuth:
      type: http
      scheme: apikey
tags:
  - name: Authentication
    description: >-
      There are two modes of authentication supported depending on the
      end-points being used. Some end-points support both modes, while others
      support only one.


      - **Client ID + Client Secret:** Authenticates your server with us. Used
      in your server-side code and our server SDKs.

      - **Client ID + User ID:** Authenticates your end-user with us. Used in
      your web and mobile apps and our front-end SDKs.
          
          - Also supports a Secure Mode (see explanation below)
  - name: In-App
  - name: Preferences
  - name: Preferences > Sub Notifications
    description: >-
      Sub notifications are used to provide more granularity to end-users in
      their notification preferences. With subNotificationId, a user can
      sub/unsub to a subgroup of a notification.


      Learn more
      [here](https://docs.notificationapi.com/features/subnotifications).
  - name: Sending
  - name: User
  - name: Undocumented
  - name: Undocumented > call
  - name: Undocumented > components
  - name: Undocumented > components > {channel}
  - name: Undocumented > components > {channel} > {componentId}
  - name: Undocumented > components_public_url
  - name: Undocumented > components_public_url > validateAuthBee
  - name: Undocumented > components_public_url > {channel}
  - name: Undocumented > emailer
  - name: Undocumented > emailer > senders
  - name: Undocumented > emailer > senders > {sender}
  - name: Undocumented > emailer > test
  - name: Undocumented > environments
  - name: Undocumented > insights
  - name: Undocumented > logs
  - name: Undocumented > logs > retention
  - name: Undocumented > members
  - name: Undocumented > members > {userId}
  - name: Undocumented > notifications
  - name: Undocumented > notifications > {notificationId}
  - name: Undocumented > notifications > {notificationId} > defaulttemplate
  - name: >-
      Undocumented > notifications > {notificationId} > defaulttemplate >
      {channel}
  - name: Undocumented > notifications > {notificationId} > subNotifications
  - name: >-
      Undocumented > notifications > {notificationId} > subNotifications >
      {subNotificationId}
  - name: Undocumented > notifications > {notificationId} > templates
  - name: Undocumented > notifications > {notificationId} > templates > {channel}
  - name: >-
      Undocumented > notifications > {notificationId} > templates > {channel} >
      {templateId}
  - name: Undocumented > sms
  - name: Undocumented > sms > test
  - name: Undocumented > test
  - name: Undocumented > user_preferences
  - name: Undocumented > user_preferences > {userId}
  - name: Undocumented > users
  - name: Undocumented > users > {userId}
  - name: Undocumented > users > {userId} > unsubscribe
  - name: Undocumented > users > {userId} > validateUser
  - name: Undocumented > users > {userId} > validateUserWithRequest
paths:
  /{clientId}/auth/validateAuthenticate:
    get:
      tags:
        - Authentication
      summary: Client ID & Client Secret Example
      description: >-
        Generally used for **server-to-server** connections where you have
        control over the client secret, for example, in your back-end.


        This method uses the BASIC authorization model:


        ```

        Authorization: BASIC BASE64("CLIENT_ID:CLIENT_SECRET")

         ```

        Example in JavaScript:


        ``` javascript

        Authorization:
        Buffer.from(`${clientId}:${clientSecret}`).toString("base64")

         ```
      security:
        - basicAuth: []
      parameters:
        - name: clientId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /{clientId}/users/{userId}/validateUser:
    get:
      tags:
        - Authentication
      summary: Client ID and User ID Secure Mode Example
      description: >-
        To prevent users from impersonating each other, you can enable secure
        mode ([learn
        more](https://docs.notificationapi.com/guides/secure-mode)). In secure
        mode, you need to append the user's hashedUserId to the string that is
        being encoded:


        ```

        Authorization: BASIC BASE64("CLIENT_ID:USER_ID:HASHED_USER_ID")

         ```

        Example in JavaScript:


        ``` javascript

        Authorization: BASIC
        Buffer.from(`${clientId}:${userId}:${hashedUserId}`).toString("base64")

         ```

        To test secure mode correctly, you need to enable Secure Mode in your
        account.
      security:
        - basicAuth: []
      parameters:
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /{clientId}/users/{userId}/notifications/INAPP_WEB:
    get:
      tags:
        - In-App
      summary: Get in-app notifications
      description: >-
        Gets the user's in-app notifications from newest to oldest.


        The before parameter is optional and is used for the pagination.
        Recommended workflow:


        1. Request the first page of notifications (no before)

        2. Store the timestamp of the oldest notification (the last notification
        in the response array since the array is sorted chronologically)

        3. Pass that value as the "before" parameter for the next API call
            

        The "before" parameter is inclusive (less than and equals) to ensure
        notifications that are stored within one millisecond are not missed.
        This results in repeated notifications being returned. Make sure to drop
        response notifications with the same ID.
      security:
        - basicAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Thu, 04 Apr 2024 19:57:12 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '1022'
            Connection:
              schema:
                type: string
                example: close
            x-amzn-RequestId:
              schema:
                type: string
                example: 0910f896-a095-45fc-9943-17554640a321
            x-amz-apigw-id:
              schema:
                type: string
                example: Vt3jgFvpIAMEfag=
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: >-
                  Root=1-660f0616-669bd53f0e29064937b0c519;Parent=0ae22a2ea914544e;Sampled=0
          content:
            application/json:
              schema:
                type: object
              example:
                notifications:
                  - id: 3924f8a9-2b39-4837-be5f-4e0ed0e52ba1
                    seen: false
                    title: You have a new disputed valued at $100.
                    redirectURL: https://www.notificationapi.com/abc-xyz
                    imageURL: >-
                      https://assets-global.website-files.com/5f5a9b2a0c682fc717d94b8c/5f66593fc2c2e1390606f2cb_chargeflow-io-stripe-logo.svg
                    date: '2024-04-03T21:41:20.220Z'
                  - id: 875fd131-62d0-486b-b48d-5b1beb1ed483
                    seen: true
                    title: You have a new disputed valued at $100.
                    redirectURL: https://www.notificationapi.com/abc-xyz
                    imageURL: >-
                      https://assets-global.website-files.com/5f5a9b2a0c682fc717d94b8c/5f66593fc2c2e1390606f2cb_chargeflow-io-stripe-logo.svg
                    date: '2024-04-03T20:57:37.407Z'
                  - id: c8040861-ffbd-48af-aaa9-611cf4519fa2
                    seen: true
                    title: You have a new disputed valued at $100.
                    redirectURL: https://www.notificationapi.com/abc-xyz
                    imageURL: >-
                      https://assets-global.website-files.com/5f5a9b2a0c682fc717d94b8c/5f66593fc2c2e1390606f2cb_chargeflow-io-stripe-logo.svg
                    date: '2024-04-03T20:56:10.772Z'
  /{clientId}/users/{userId}/unread/INAPP_WEB:
    get:
      tags:
        - In-App
      summary: Get unread count
      description: Returns the number of unread in-app notifications.
      security:
        - basicAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Thu, 04 Apr 2024 19:59:42 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '11'
            Connection:
              schema:
                type: string
                example: keep-alive
            x-amzn-RequestId:
              schema:
                type: string
                example: 5612b255-88b5-4f57-b7ce-dfa1dbf7b220
            x-amz-apigw-id:
              schema:
                type: string
                example: Vt37CEOyoAMEblg=
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: >-
                  Root=1-660f06ac-36d9c7937f44e31e23862f67;Parent=199ffda56c12a12f;Sampled=0
          content:
            application/json:
              schema:
                type: object
              example:
                count: 1
    patch:
      tags:
        - In-App
      summary: Mark notification as read
      description: >-
        This method is used to mark one or all notifications of the user as
        read.


        - To mark all as read: pass an empty object in body: `{}`
            
        - To mark a single notification, use the notification's `trackingId` in
        the body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                notificationId: TRACKING_ID
      security:
        - basicAuth: []
      parameters:
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Thu, 04 Apr 2024 20:00:42 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '0'
            Connection:
              schema:
                type: string
                example: keep-alive
            x-amzn-RequestId:
              schema:
                type: string
                example: 31087143-e2d4-40d0-83dc-5c250acd7e8a
            x-amz-apigw-id:
              schema:
                type: string
                example: Vt4EsG74IAMEBNA=
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: >-
                  Root=1-660f06ea-6eece82c16bd65e176fa3f9a;Parent=406e60444bba25d6;Sampled=0
          content:
            application/json:
              schema:
                type: object
              example: {}
  /{clientId}/notifications/{notificationId}/subNotifications/{subNotificationId}:
    put:
      tags:
        - Preferences > Sub Notifications
      summary: Create subNotification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: <string>
      security:
        - basicAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
        - name: subNotificationId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Tue, 09 Apr 2024 14:46:41 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '162'
            Connection:
              schema:
                type: string
                example: keep-alive
            x-amzn-RequestId:
              schema:
                type: string
                example: 7dfaae6c-6491-44b3-a4f5-01db24ea2f5c
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            x-amz-apigw-id:
              schema:
                type: string
                example: V9owzF3SIAMEmPQ=
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: >-
                  Root=1-661554d1-2735ed04676497b6561a5045;Parent=54acc7fd71fbd362;Sampled=0
          content:
            application/json:
              schema:
                type: object
              example:
                accountId: 24nojpnrsdc53fkslha0roov05
                notificationId: project_approval
                subNotificationId: proj_abc
                title: Project ABC
  /{envId}/notifications/{notificationId}/subNotifications/{subNotificationId}:
    delete:
      tags:
        - Preferences > Sub Notifications
      summary: Delete subNotification
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: subNotificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > subNotifications >
          {subNotificationId}
      summary: >-
        /:envId/notifications/:notificationId/subNotifications/:subNotificationId
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: subNotificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{clientId}/user_preferences/{userId}:
    post:
      tags:
        - Preferences
      summary: Update User Preferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - channel: <string>
                  notificationId: <string>
                  state: <boolean>
                  subNotificationId: <string>
                - channel: <string>
                  notificationId: <string>
                  state: <boolean>
                  subNotificationId: <string>
      security:
        - basicAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Tue, 09 Apr 2024 15:01:59 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '263'
            Connection:
              schema:
                type: string
                example: keep-alive
            x-amzn-RequestId:
              schema:
                type: string
                example: 01460e48-2e1f-4a1e-a644-d355dbdc38b9
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            x-amz-apigw-id:
              schema:
                type: string
                example: V9q_8FJ-oAMEtFg=
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: >-
                  Root=1-66155865-7be75bbc5cc357c47d90392d;Parent=4fdbf641155edea7;Sampled=0
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Update preference
                  value:
                    UserPreferences:
                      - envId: 24nojpnrsdc53fkslha0roov05
                        userId: USER_ID
                        notificationId: project_approval
                        channelsStates:
                          - channel: INAPP_WEB
                            state: false
                example-1:
                  summary: Update subNotification Preference
                  value:
                    UserPreferences:
                      - envId: 24nojpnrsdc53fkslha0roov05
                        userId: USER_ID
                        notificationId: project_approval
                        subNotificationId: proj_abc
                        channelsStates:
                          - channel: EMAIL
                            state: true
  /{clientId}/sender:
    post:
      tags:
        - Sending
      summary: Send a notification
      description: >-
        For a detailed description of parameters and options, visit
        [here](https://docs.notificationapi.com/reference/server#send).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                notificationId: NOTIFICATION_ID_FROM_DASHBOARD
                user:
                  id: END_USER_ID
                  number: '+15005550006'
                  email: END_USER_EMAIL
                mergeTags:
                  firstName: Sahand
                templateId: <string>
                subNotificationId: <string>
                forceChannels:
                  - WEB_PUSH
                  - SMS
                schedule: <string>
                secondaryId: <string>
                replace: {}
                options:
                  email:
                    attachments:
                      - name: <string>
                        url: <string>
                      - name: <string>
                        url: <string>
                    ccAddresses:
                      - <string>
                      - <string>
                    fromName: <string>
                    fromAddress: <string>
                    bccAddresses:
                      - <string>
                      - <string>
                    replyToAddresses:
                      - <string>
                      - <string>
                  apn:
                    collapseId: <string>
                    threadId: <string>
                    badge: <number>
                    sound: <string>
                    expiry: <number>
                    priority: <number>
                    contentAvailable: <boolean>
                  fcm:
                    android:
                      restrictedPackageName: <string>
                      collapseKey: <string>
                      priority: high
                      ttl: <number>
      security:
        - basicAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: clientId
          in: path
          schema:
            type: string
          required: true
      responses:
        '500':
          description: Internal Server Error
          headers:
            Date:
              schema:
                type: string
                example: Thu, 04 Apr 2024 21:36:41 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '90'
            Connection:
              schema:
                type: string
                example: keep-alive
            x-amzn-RequestId:
              schema:
                type: string
                example: 55400f67-83e7-4ec4-82df-a82ae367f2db
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            x-amz-apigw-id:
              schema:
                type: string
                example: VuGIgH9-IAMEJqA=
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: >-
                  Root=1-660f1d69-33de2d6366f3d19759677429;Parent=466f7660227bd8b4;Sampled=0
          content:
            application/json:
              schema:
                type: object
              example:
                trackingId: 7c2fdacb-9636-478d-baa5-9e135945de91
                messages: []
  /{envId}/sender/retract:
    post:
      tags:
        - Sending
      summary: Delete In-App Notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                notificationId: <string>
                userId: <string>
                secondaryId: <string>
                subNotificationId: <string>
      security:
        - basicAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{clientId}/schedule/{trackingId}:
    patch:
      tags:
        - Sending
      summary: Update a scheduled notification
      description: >-
        Update an already scheduled notification. The Request Body is similar to
        the Body when triggering the notification, but only with fields that you
        want to override or update.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                schedule: <string>
                secondaryId: <string>
                replace: {}
                options:
                  fcm:
                    android:
                      restrictedPackageName: <string>
                      collapseKey: <string>
                      priority: high
                      ttl: <number>
                  email:
                    attachments:
                      - name: <string>
                        url: <string>
                      - name: <string>
                        url: <string>
                    ccAddresses:
                      - <string>
                      - <string>
                    fromName: <string>
                    fromAddress: <string>
                    bccAddresses:
                      - <string>
                      - <string>
                    replyToAddresses:
                      - <string>
                      - <string>
                  apn:
                    collapseId: <string>
                    threadId: <string>
                    badge: <number>
                    sound: <string>
                    expiry: <number>
                    priority: <number>
                    contentAvailable: <boolean>
                mergeTags: {}
                templateId: <string>
                subNotificationId: <string>
                forceChannels:
                  - PUSH
                  - INAPP_WEB
                user:
                  id: <string>
                  number: <string>
                  email: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: trackingId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - Sending
      summary: Delete a scheduled notification
      description: >-
        Deletes a notification that has been scheduled using the "scheduled"
        field.
      security:
        - basicAuth: []
      parameters:
        - name: clientId
          in: path
          schema:
            type: string
          required: true
        - name: trackingId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/users/{userId}/unsubscribe:
    post:
      tags:
        - User
      summary: Unsubscribe
      description: |-
        Unsubscribe a user from a specific type of notification and channel.

        CHANNEL_TYPE is specified in query string and is either of:

        - EMAIL
            
        - INAPP_WEB
            
        - SMS
            
        - CALL
            
        - PUSH
            
        - WEB_PUSH
      requestBody:
        content: {}
      security:
        - basicAuth: []
      parameters:
        - name: channel
          in: query
          schema:
            type: string
          example: CHANNEL_TYPE
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > users > {userId} > unsubscribe
      summary: /:envId/users/:userId/unsubscribe
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/components/{channel}/{componentId}:
    get:
      tags:
        - Undocumented > components > {channel} > {componentId}
      summary: /:envId/components/:channel/:componentId
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: componentId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                channel: EMAIL
                componentId: <string>
                createdAt: <string>
                envId: <string>
                html: <string>
                internal: <string>
                internalPage: <string>
                modifiedAt: <string>
                name: <string>
                referencedBy:
                  - channel: EMAIL
                    notificationId: <string>
                    templateId: <string>
                  - channel: EMAIL
                    notificationId: <string>
                    templateId: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - Undocumented > components > {channel} > {componentId}
      summary: /:envId/components/:channel/:componentId
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: componentId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - channel: EMAIL
                  componentId: <string>
                  createdAt: <string>
                  envId: <string>
                  html: <string>
                  internal: <string>
                  internalPage: <string>
                  modifiedAt: <string>
                  name: <string>
                  referencedBy:
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
                - channel: EMAIL
                  componentId: <string>
                  createdAt: <string>
                  envId: <string>
                  html: <string>
                  internal: <string>
                  internalPage: <string>
                  modifiedAt: <string>
                  name: <string>
                  referencedBy:
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - Undocumented > components > {channel} > {componentId}
      summary: /:envId/components/:channel/:componentId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                internal: <string>
                internalPage: <string>
                name: <string>
                html: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: componentId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                channel: EMAIL
                componentId: <string>
                createdAt: <string>
                envId: <string>
                html: <string>
                internal: <string>
                internalPage: <string>
                modifiedAt: <string>
                name: <string>
                referencedBy:
                  - channel: EMAIL
                    notificationId: <string>
                    templateId: <string>
                  - channel: EMAIL
                    notificationId: <string>
                    templateId: <string>
  /{envId}/components/{channel}:
    get:
      tags:
        - Undocumented > components > {channel}
      summary: /:envId/components/:channel
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - channel: EMAIL
                  componentId: <string>
                  createdAt: <string>
                  envId: <string>
                  html: <string>
                  internal: <string>
                  internalPage: <string>
                  modifiedAt: <string>
                  name: <string>
                  referencedBy:
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
                - channel: EMAIL
                  componentId: <string>
                  createdAt: <string>
                  envId: <string>
                  html: <string>
                  internal: <string>
                  internalPage: <string>
                  modifiedAt: <string>
                  name: <string>
                  referencedBy:
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
                    - channel: EMAIL
                      notificationId: <string>
                      templateId: <string>
    post:
      tags:
        - Undocumented > components > {channel}
      summary: /:envId/components/:channel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                componentId: <string>
                name: <string>
                internal: <string>
                internalPage: <string>
                html: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                channel: EMAIL
                componentId: <string>
                createdAt: <string>
                envId: <string>
                html: <string>
                internal: <string>
                internalPage: <string>
                modifiedAt: <string>
                name: <string>
                referencedBy:
                  - channel: EMAIL
                    notificationId: <string>
                    templateId: <string>
                  - channel: EMAIL
                    notificationId: <string>
                    templateId: <string>
  /{envId}/components_public_url/validateAuthBee:
    get:
      tags:
        - Undocumented > components_public_url > validateAuthBee
      summary: /:envId/components_public_url/validateAuthBee
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > components_public_url > validateAuthBee
      summary: /:envId/components_public_url/validateAuthBee
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/components_public_url/{channel}:
    get:
      tags:
        - Undocumented > components_public_url > {channel}
      summary: /:envId/components_public_url/:channel
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - columns: []
                  metadata:
                    componentId: <string>
                    name: <string>
                - columns: []
                  metadata:
                    componentId: <string>
                    name: <string>
    options:
      tags:
        - Undocumented > components_public_url > {channel}
      summary: /:envId/components_public_url/:channel
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/emailer/senders/{sender}:
    delete:
      tags:
        - Undocumented > emailer > senders > {sender}
      summary: /:envId/emailer/senders/:sender
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: sender
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > emailer > senders > {sender}
      summary: /:envId/emailer/senders/:sender
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: sender
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/emailer/senders:
    get:
      tags:
        - Undocumented > emailer > senders
      summary: /:envId/emailer/senders
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - lastSync: <string>
                  sender: <string>
                  status: TEMPORARY_FAILURE
                  type: domain
                  mailFromDomainStatus: TEMPORARY_FAILURE
                  verificationTokens:
                    - <string>
                    - <string>
                - lastSync: <string>
                  sender: <string>
                  status: FAILED
                  type: email
                  mailFromDomainStatus: SUCCESS
                  verificationTokens:
                    - <string>
                    - <string>
    post:
      tags:
        - Undocumented > emailer > senders
      summary: /:envId/emailer/senders
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sender: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - lastSync: <string>
                  sender: <string>
                  status: TEMPORARY_FAILURE
                  type: domain
                  mailFromDomainStatus: TEMPORARY_FAILURE
                  verificationTokens:
                    - <string>
                    - <string>
                - lastSync: <string>
                  sender: <string>
                  status: FAILED
                  type: email
                  mailFromDomainStatus: SUCCESS
                  verificationTokens:
                    - <string>
                    - <string>
    options:
      tags:
        - Undocumented > emailer > senders
      summary: /:envId/emailer/senders
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/emailer/test:
    post:
      tags:
        - Undocumented > emailer > test
      summary: /:envId/emailer/test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email:
                  - <string>
                  - <string>
                html: <string>
                subject: <string>
                previewText: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > emailer > test
      summary: /:envId/emailer/test
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/environments:
    post:
      tags:
        - Undocumented > environments
      summary: /:envId/environments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                clientId: <string>
                clientSecret: <string>
                title: <string>
    options:
      tags:
        - Undocumented > environments
      summary: /:envId/environments
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/insights:
    post:
      tags:
        - Undocumented > insights
      summary: /:envId/insights
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                EndTime: <string>
                MetricDataQueries:
                  - Id: <string>
                    MetricStat:
                      Metric:
                        MetricName: <string>
                        Namespace: <string>
                      Period: <integer>
                      Stat: <string>
                  - Id: <string>
                    MetricStat:
                      Metric:
                        MetricName: <string>
                        Namespace: <string>
                      Period: <integer>
                      Stat: <string>
                StartTime: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: []
    options:
      tags:
        - Undocumented > insights
      summary: /:envId/insights
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/logs/retention:
    get:
      tags:
        - Undocumented > logs > retention
      summary: /:envId/logs/retention
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                retentionInDays: <number>
    options:
      tags:
        - Undocumented > logs > retention
      summary: /:envId/logs/retention
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/members/{userId}:
    delete:
      tags:
        - Undocumented > members > {userId}
      summary: /:envId/members/:userId
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > members > {userId}
      summary: /:envId/members/:userId
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/members:
    get:
      tags:
        - Undocumented > members
      summary: /:envId/members
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - accountId: <string>
                  userId: <string>
                  email: <string>
                - accountId: <string>
                  userId: <string>
                  email: <string>
    post:
      tags:
        - Undocumented > members
      summary: /:envId/members
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > members
      summary: /:envId/members
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/notifications/{notificationId}/defaulttemplate/{channel}:
    options:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > defaulttemplate >
          {channel}
      summary: /:envId/notifications/:notificationId/defaulttemplate/:channel
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > defaulttemplate >
          {channel}
      summary: /:envId/notifications/:notificationId/defaulttemplate/:channel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                templateId: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title: Template
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/notifications/{notificationId}/defaulttemplate:
    post:
      tags:
        - Undocumented > notifications > {notificationId} > defaulttemplate
      summary: /:envId/notifications/:notificationId/defaulttemplate
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > notifications > {notificationId} > defaulttemplate
      summary: /:envId/notifications/:notificationId/defaulttemplate
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/notifications/{notificationId}/templates/{channel}/{templateId}:
    get:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > templates >
          {channel} > {templateId}
      summary: /:envId/notifications/:notificationId/templates/:channel/:templateId
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: templateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title: Template
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > templates >
          {channel} > {templateId}
      summary: /:envId/notifications/:notificationId/templates/:channel/:templateId
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: templateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > templates >
          {channel} > {templateId}
      summary: /:envId/notifications/:notificationId/templates/:channel/:templateId
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: templateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > templates >
          {channel} > {templateId}
      summary: /:envId/notifications/:notificationId/templates/:channel/:templateId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: TemplatesPATCHRequest
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: templateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title: Template
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/notifications/{notificationId}/templates/{channel}:
    get:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > templates >
          {channel}
      summary: /:envId/notifications/:notificationId/templates/:channel
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - title: Template
                - title: Template
    post:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > templates >
          {channel}
      summary: /:envId/notifications/:notificationId/templates/:channel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: TemplatesPOSTRequest
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title: Template
    options:
      tags:
        - >-
          Undocumented > notifications > {notificationId} > templates >
          {channel}
      summary: /:envId/notifications/:notificationId/templates/:channel
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: channel
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/notifications/{notificationId}:
    get:
      tags:
        - Undocumented > notifications > {notificationId}
      summary: /:envId/notifications/:notificationId
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Undocumented > notifications > {notificationId}
      summary: /:envId/notifications/:notificationId
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > notifications > {notificationId}
      summary: /:envId/notifications/:notificationId
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - Undocumented > notifications > {notificationId}
      summary: /:envId/notifications/:notificationId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                throttling:
                  forever: <boolean>
                  max: <integer>
                  period: <integer>
                  scope:
                    - userId
                    - userId
                  unit: months
                channels:
                  - CALL
                  - EMAIL
                options:
                  EMAIL:
                    defaultDeliverOption: weekly
                    daily:
                      enabled: <boolean>
                      hour: <string>
                    monthly:
                      date: <string>
                      enabled: <boolean>
                      hour: <string>
                    'off':
                      enabled: <boolean>
                    weekly:
                      day: <string>
                      enabled: <boolean>
                      hour: <string>
                    instant:
                      enabled: <boolean>
                deduplication:
                  duration: <integer>
                title: <string>
                enabled: <boolean>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: notificationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                channels:
                  - EMAIL
                  - CALL
                enabled: <boolean>
                envId: <string>
                notificationId: <string>
                title: <string>
                throttling:
                  forever: <boolean>
                  max: <integer>
                  period: <integer>
                  scope:
                    - notificationId
                    - notificationId
                  unit: years
                options:
                  EMAIL:
                    defaultDeliverOption: monthly
                    daily:
                      enabled: <boolean>
                      hour: <string>
                    monthly:
                      date: <string>
                      enabled: <boolean>
                      hour: <string>
                    'off':
                      enabled: <boolean>
                    weekly:
                      day: <string>
                      enabled: <boolean>
                      hour: <string>
                    instant:
                      enabled: <boolean>
                deduplication:
                  duration: <integer>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/notifications:
    get:
      tags:
        - Undocumented > notifications
      summary: /:envId/notifications
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{accountId}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Undocumented > notifications
      summary: /:envId/notifications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                channels:
                  - WEB_PUSH
                  - PUSH
                notificationId: <string>
                title: <string>
                throttling:
                  forever: <boolean>
                  max: <integer>
                  period: <integer>
                  scope:
                    - userId
                    - notificationId
                  unit: days
                options:
                  EMAIL:
                    defaultDeliverOption: weekly
                    daily:
                      enabled: <boolean>
                      hour: <string>
                    monthly:
                      date: <string>
                      enabled: <boolean>
                      hour: <string>
                    'off':
                      enabled: <boolean>
                    weekly:
                      day: <string>
                      enabled: <boolean>
                      hour: <string>
                    instant:
                      enabled: <boolean>
                deduplication:
                  duration: <integer>
                enabled: <boolean>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                channels:
                  - EMAIL
                  - CALL
                enabled: <boolean>
                envId: <string>
                notificationId: <string>
                title: <string>
                throttling:
                  forever: <boolean>
                  max: <integer>
                  period: <integer>
                  scope:
                    - notificationId
                    - notificationId
                  unit: years
                options:
                  EMAIL:
                    defaultDeliverOption: monthly
                    daily:
                      enabled: <boolean>
                      hour: <string>
                    monthly:
                      date: <string>
                      enabled: <boolean>
                      hour: <string>
                    'off':
                      enabled: <boolean>
                    weekly:
                      day: <string>
                      enabled: <boolean>
                      hour: <string>
                    instant:
                      enabled: <boolean>
                deduplication:
                  duration: <integer>
    options:
      tags:
        - Undocumented > notifications
      summary: /:envId/notifications
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/sms/test:
    post:
      tags:
        - Undocumented > sms > test
      summary: /:envId/sms/test
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    options:
      tags:
        - Undocumented > sms > test
      summary: /:envId/sms/test
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/test:
    post:
      tags:
        - Undocumented > test
      summary: /:envId/test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                notificationId: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > test
      summary: /:envId/test
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/user_preferences/{userId}:
    options:
      tags:
        - Undocumented > user_preferences > {userId}
      summary: /:envId/user_preferences/:userId
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/users/{userId}/validateUser:
    get:
      tags:
        - Undocumented > users > {userId} > validateUser
      summary: /:envId/users/:userId/validateUser
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > users > {userId} > validateUser
      summary: /:envId/users/:userId/validateUser
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/users/{userId}/validateUserWithRequest:
    get:
      tags:
        - Undocumented > users > {userId} > validateUserWithRequest
      summary: /:envId/users/:userId/validateUserWithRequest
      security:
        - apikeyAuth: []
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
    options:
      tags:
        - Undocumented > users > {userId} > validateUserWithRequest
      summary: /:envId/users/:userId/validateUserWithRequest
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}/users/{userId}:
    post:
      tags:
        - Undocumented > users > {userId}
      summary: /:envId/users/:userId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                number: <string>
                webPushTokens:
                  - sub:
                      endpoint: <string>
                      keys:
                        auth: <string>
                        p256dh: <string>
                  - sub:
                      endpoint: <string>
                      keys:
                        auth: <string>
                        p256dh: <string>
                pushTokens:
                  - device:
                      device_id: <string>
                      ad_id: <string>
                      model: <string>
                      app_id: <string>
                      platform: <string>
                      manufacturer: <string>
                    token: <string>
                    type: FCM
                  - device:
                      device_id: <string>
                      ad_id: <string>
                      model: <string>
                      app_id: <string>
                      platform: <string>
                      manufacturer: <string>
                    token: <string>
                    type: FCM
                email: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                number: <string>
                webPushTokens:
                  - sub:
                      endpoint: <string>
                      keys:
                        auth: <string>
                        p256dh: <string>
                  - sub:
                      endpoint: <string>
                      keys:
                        auth: <string>
                        p256dh: <string>
                pushTokens:
                  - device:
                      device_id: <string>
                      ad_id: <string>
                      model: <string>
                      app_id: <string>
                      platform: <string>
                      manufacturer: <string>
                    token: <string>
                    type: APN
                  - device:
                      device_id: <string>
                      ad_id: <string>
                      model: <string>
                      app_id: <string>
                      platform: <string>
                      manufacturer: <string>
                    token: <string>
                    type: FCM
                email: <string>
    options:
      tags:
        - Undocumented > users > {userId}
      summary: /:envId/users/:userId
      requestBody:
        content: {}
      parameters:
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: <string>
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: <string>
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /{envId}:
    get:
      tags:
        - Undocumented
      summary: /:envId
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                usageLimit:
                  CALL: <number>
                  SMS: <number>
                  INAPP_WEB: <number>
                  EMAIL: <number>
                  PUSH: <number>
                disableSending:
                  - EMAIL
                  - CALL
                accountType: <string>
                envId: <string>
                secureMode: <boolean>
                verification:
                  - DOMAIN_VERIFICATION
                  - EMAIL_CONFIRMATION
    patch:
      tags:
        - Undocumented
      summary: /:envId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                disableSending:
                  - SMS
                  - EMAIL
                secureMode: <boolean>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: envId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /health:
    get:
      tags:
        - default
      summary: /health
      description: >-
        Checks a number of our internal services to ensure everything is working
        fine.
      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Thu, 04 Apr 2024 22:00:41 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '40'
            Connection:
              schema:
                type: string
                example: keep-alive
            x-amzn-RequestId:
              schema:
                type: string
                example: e6974183-0729-4266-8fcf-49820c085328
            x-amz-apigw-id:
              schema:
                type: string
                example: VuJplGEHoAMEisQ=
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: >-
                  Root=1-660f2309-76fb778222b1daa00caba4d8;Parent=53c416086f8e9408;Sampled=0
          content:
            application/json:
              schema:
                type: object
              example:
                message: Health checks passed.
